@using System.Globalization
@model KaCake.ViewModels.Assignment.IndexViewModel

@{
    ViewBag.Title = "View assignments";
}

<h2>
    <a asp-controller="Course" asp-action="View" asp-route-id="@Model.CourseId">@Model.CourseName</a> /
    <a asp-controller="TaskGroup" asp-action="View" asp-route-id="@Model.TaskGroupId">@Model.TaskGroupName</a> / 
    <a asp-controller="TaskVariant" asp-action="View" asp-route-id="@Model.TaskVariantId">@Model.TaskVariantName</a> / 
    Assignments
</h2>

<a asp-controller="Assignment" asp-action="Export" asp-route-id="@Model.TaskVariantId" class="btn btn-default">Export to excel</a>

<div class="form-group pull-right">
    <input type="text" class="search form-control" placeholder="What you looking for?">
</div>
<span class="counter pull-right"></span>

<table class="table table-hover table-bordered results">
    <thead>
        <tr>
            <th class="col-md-5 col-xs-5">Name</th>
            <th class="col-md-4 col-xs-4">Submission status</th>
            <th class="col-md-3 col-xs-3">Grade</th>
        </tr>
        <tr class="warning no-result">
            <td colspan="4"><i class="fa fa-warning"></i> No result</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var assignment in @Model.Assignments)
        {
            <tr data-href="@Url.Action("Review", "Assignment", new {variantId = assignment.TaskVariantId, userId = assignment.UserId})">
                <td>@assignment.UserName</td>
                <td>@assignment.Status</td>
                <td>@(assignment.Status == ReviewStatus.Graded ? assignment.Score.ToString(CultureInfo.InvariantCulture) : "-")</td>
            </tr>
        }
    </tbody>
</table>

@section scripts
{
    <script src="~/lib/bootstrap-list-filter/bootstrap-list-filter.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function() {
            $(".search").keyup(function() {
                var searchTerm = $(".search").val();
                var listItem = $('.results tbody').children('tr');
                var searchSplit = searchTerm.replace(/ /g, "'):containsi('");

                $.extend($.expr[':'],
                {
                    'containsi': function(elem, i, match, array) {
                        return (elem.textContent || elem.innerText || '').toLowerCase()
                            .indexOf((match[3] || "").toLowerCase()) >=
                            0;
                    }
                });

                $(".results tbody tr").not(":containsi('" + searchSplit + "')").each(function(e) {
                    $(this).attr('visible', 'false');
                });

                $(".results tbody tr:containsi('" + searchSplit + "')").each(function(e) {
                    $(this).attr('visible', 'true');
                });

                var jobCount = $('.results tbody tr[visible="true"]').length;
                $('.counter').text(jobCount + ' item');

                if (jobCount == '0') {
                    $('.no-result').show();
                } else {
                    $('.no-result').hide();
                }
            });

            @if (User.IsInRole(RoleNames.Admin))
            {
                <text>
                    $('.table > tbody > tr').css('cursor', 'pointer');
                    $('.table > tbody > tr').click(function() {
                        window.location.href = $(this).attr("data-href");
                    });
                </text>
            }
        });
    </script>
}